<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>JR</title>
<link>https://jdnricardo.com/blog.html</link>
<atom:link href="https://jdnricardo.com/blog.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Sat, 14 Jun 2025 04:00:00 GMT</lastBuildDate>
<item>
  <title>WASM Fanboy Learns About Browser Fingerprints</title>
  <dc:creator>Julian Ricardo</dc:creator>
  <link>https://jdnricardo.com/posts/wasm-fingerpints/</link>
  <description><![CDATA[ 





<p>It was inevitable that WebAssembly would lose the untarnished reputation I had created for it in my mind. Until now I haven’t needed it much, but (or maybe because of that?) I placed it on the highest pedestal for reproducibility and performance, should a client or a project at $WORK require it.</p>
<p>If that hypothetical client/project ever appeared. In the meantime, “lesser” tools were sufficient. “Oh, we just need this all in an Excel file”. Or, “pdf if fine.” So I’d stick to interactive notebooks, or if I got lucky some Shiny or plotly or Streamlit, and dutifully export charts and tables to pdf, or paste them into a MS Office product.</p>
<p>Meanwhile, I kept seeing more ways I could use WASM, if only a project I was on called for it. And so its reputation grew. The tipping point for my uncritical fanboydom was when, without me lifting a finger, the R packages I developed for a previous employer became available in WASM via the <a href="https://nmrgroup.r-universe.dev/coreStatsNMR">R-Universe</a>.</p>
<p>Did I or any of my analyst colleages need WASM? No.&nbsp;But it made WASM all that much more alluring. I could almost take credit for developing something in WASM. Almost. As long as whoever I told the exciting news knew nothing about R-Universe and their WASM rollout.</p>
<p>This isn’t a story about how my overly rosy view of WASM comes crashing down in a heap of over-budget, over-cooked spaghetti code. I honestly still haven’t used it all too much, so it still sits on one of the higher shelves in my software/data carpentry workshop, ready to be dusted off. This is more a story of how a tool’s reputation begins to lose its sheen.</p>
<p>Like when a favorite restaurant gets too popular, expands too fast to multiple locations, and fizzles out. Or gets acquired by “new management” who thoroughly financialize the joint, rewiring staffs’ and patrons’ POV to maximize time spent in restaurant over enjoyment of the food or the vibe.</p>
<p>In WASM’s case, honestly, don’t trust me to forecast anything. I haven’t used it enough to be a trustworthy narrator. I’m keeping it in my rotation, because I still don’t know anything else that matches its speed and wide support across browsers. But my ears perked up when I read that a team of cybersecurity researchers saw a “false-positive rate of less than 1%”[1], using subtle differences in browsers’ WASM implementations to fingerprint users, even those with otherwise spoofed identifiers. And yes, the same research team also proposes mitigation techniques to protect user privacy from WASM fingerprinting, so all is not lost. Other than the untarnished reputation I had built up for WASM. But as with most tools I’ve come to adopt, I suspect I’ll be better off as a slightly more-critical user than a total fanboy.</p>
<p>[1] <a href="https://arxiv.org/abs/2506.06500">arXiv:2506.00719 [cs.CR]</a></p>



 ]]></description>
  <category>wasm</category>
  <category>security</category>
  <guid>https://jdnricardo.com/posts/wasm-fingerpints/</guid>
  <pubDate>Sat, 14 Jun 2025 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Advent of Code: Day 1</title>
  <dc:creator>Julian Ricardo</dc:creator>
  <link>https://jdnricardo.com/posts/advent-of-code-2024/day1/</link>
  <description><![CDATA[ 





<p>This is my first year participating in the <a href="https://bsky.app/hashtag/AdventOfCode" target="_blank">#AdventofCode</a>! Already off to a promising start, having to catch up on the first day’s challenge, but I was too busy driving back from time with family yesterday.</p>
<p>I worked up solutions using the <code>tidytable</code> and <code>collapse</code> packages for parts 1 and 2 below. They are my go-to packages for developing tidyverse-style with higher upside on computational performance. Everything is in functional form to make benchmarking performance easier later on.</p>
<p>First things first, a function to load input data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">get_day1_input <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input-day01.txt"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read in as single column</span></span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb1-5">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"list_1"</span>,</span>
<span id="cb1-6">                           <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"list_2"</span>))</span>
<span id="cb1-7">}</span></code></pre></div>
</div>
<section id="part-1" class="level2">
<h2 class="anchored" data-anchor-id="part-1">Part 1</h2>
<p>The first part requires solving for the total distance between two lists, taken as the difference between corresponding elements (in ascending order).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">tidytable_day1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() { </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_day1_input</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(sort) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb2-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distance =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(list_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> list_2))</span>
<span id="cb2-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>()</span>
<span id="cb2-9">}</span>
<span id="cb2-10"></span>
<span id="cb2-11">collapse_day1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_day1_input</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmutate</span>(</span>
<span id="cb2-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">list_1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(list_1),</span>
<span id="cb2-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">list_2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(list_2)</span>
<span id="cb2-16">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmutate</span>(</span>
<span id="cb2-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distance =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(list_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> list_2), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb2-19">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsum</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>()</span>
<span id="cb2-22">}</span></code></pre></div>
</div>
<p>And comparing performance…</p>
<p><img src="https://jdnricardo.com/posts/advent-of-code-2024/day1/day1_p1_bench.png" class="img-fluid"></p>
</section>
<section id="part-2" class="level2">
<h2 class="anchored" data-anchor-id="part-2">Part 2</h2>
<p>The second part requires calculating a total similarity score between the lists, where the only elements that score points are present in both lists. The score is taken as the product of each said number and the number of appearances in the <em>second list</em></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">tidytable_day1_p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_day1_input</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(list_2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> list_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(list_2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sim_score =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>list_2),</span>
<span id="cb3-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>()</span>
<span id="cb3-9">}</span>
<span id="cb3-10"></span>
<span id="cb3-11">collapse_day1_p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_day1_input</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsubset</span>(list_2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> list_1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fcount</span>(list_2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fmutate</span>(</span>
<span id="cb3-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sim_score =</span> N<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>list_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span></span>
<span id="cb3-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fsum</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>()</span>
<span id="cb3-20">}</span></code></pre></div>
</div>
<p>Again, comparing performance</p>
<p><img src="https://jdnricardo.com/posts/advent-of-code-2024/day1/day1_p2_bench.png" class="img-fluid"></p>
<p>Stick around for day 2!! Which will technically happen on day 3. My money is on me catching up by the weekend :)</p>


</section>

 ]]></description>
  <category>code</category>
  <category>advent</category>
  <category>benchmark</category>
  <guid>https://jdnricardo.com/posts/advent-of-code-2024/day1/</guid>
  <pubDate>Mon, 02 Dec 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Visualizing outage data</title>
  <dc:creator>Julian Ricardo</dc:creator>
  <link>https://jdnricardo.com/posts/eaglei/viz_sketches/</link>
  <description><![CDATA[ 





<section id="assembling-the-tools" class="level2">
<h2 class="anchored" data-anchor-id="assembling-the-tools">Assembling the tools</h2>
<p>This post is the third in a series exploring the DOE’s <a href="https://openenergyhub.ornl.gov/explore/dataset/eaglei_outages_2014/information/" target="_blank">Eagle-I dataset</a> on US electrical grid outages. See previous posts here: <a href="../intro/index.html" target="_blank">I</a> and <a href="../eia_metrics/index.html" target="_blank">II</a></p>
<p>I gave away in my previous post that I had drafted numbers to compare with the EIA for a few states.</p>
<p><img src="https://jdnricardo.com/posts/eaglei/eia_metrics/sample_saidi_state.png" class="img-fluid" alt="Console output in R showing the calculated SAIDI metric for an assortment of US states">.</p>
<p>They did not match the EIA chart (see below), but were reasonable enough for me to justify making more-polished visualizations. In more words, “reasonable” given just the uncertainties in data sourcing I already know about, let alone the Rumsfeldian unknowns lurking about. Before testing my <del>hubris</del> hypothesis that I’ve replicated anything worth posting about…</p>
<p>A few caveats:</p>
<ul>
<li>I am comparing numbers with the set from the EIA that <em>includes major events</em>, to avoid coming up with independent estimates of when these events occurred in the Eagle-I data, merging that data in somehow, etc.</li>
<li>I am comparing numbers with numbers I am reading off of the EIA chart, rather than coming up with my own aggregated state numbers from their underlying utility-level spreadsheet. That is an exercise for another day</li>
<li>I did not run the Eagle-I analysis on all 50 states, <del>because I’m impatient</del> to save computation time. I ran only the 8 states labeled in the EIA chart: Kentucky, Louisiana, Maine, Michigan, Mississippi, Oregon, Texas, West Virginia.</li>
</ul>
<p>Last bit before jumping into the charts… my setup chunk, where I load packages, set my <code>ggplot2</code> theme, and assemble the necessary targets (i.e.&nbsp;datasets I produced in my pipeline). For colors, I’m using reds from <a href="https://www.reasonable.work/colors/red/">Reasonable Colors</a> today.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidytable)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(forcats)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggtext)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-10">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-11">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fcfcfc"</span>)))</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_load</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matches</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sai[df]i"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">store =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../_targets"</span>)</span>
<span id="cb1-14"></span>
<span id="cb1-15">median_tag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;span style = 'color:#530003;'&gt;&lt;strong&gt;US median*&lt;/strong&gt;&lt;/span&gt;"</span></span>
<span id="cb1-16">median_red <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#530003"</span></span>
<span id="cb1-17">base_red <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FF4647"</span></span></code></pre></div>
</details>
</div>
</section>
<section id="spoiler-alert" class="level2">
<h2 class="anchored" data-anchor-id="spoiler-alert">Spoiler alert</h2>
<p>I managed to create a chart that looks like what I was after! Recall the chart we started with, from this EIA <a href="https://www.eia.gov/todayinenergy/detail.php?id=54639" target="_blank">article</a>. The two metrics I’m interested in replicating from the chart are System Average Interruption Duration Index (SAIDI, horiz. axis) and System Average Interruption Frequency Index (SAIFI, vert. axis).</p>
<p><img src="https://jdnricardo.com/posts/eaglei/intro/chart2.svg" class="img-fluid" alt="Average total annual electric power interruption duration and frequency per customer, by state, for 2021 only"></p>
<p>What’s below is only a draft, for reasons I’ll get into with the remainder of this post. A quick visual comparison of the states I analyzed, relative to the median (which is the <strong>EIA median</strong>), shows that the values I came up with are low. I would need to analyze all 50 states to check whether they are equally off relative to the new median too.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(</span>
<span id="cb2-2">  state_saidi,</span>
<span id="cb2-3">  state_saifi,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"state"</span></span>
<span id="cb2-5">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb2-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb2-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"US median*"</span>,</span>
<span id="cb2-9">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Technically, they say "just over seven hours" so I added 5% to SAIDI.</span></span>
<span id="cb2-10">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SAIFI is interpreted from graph</span></span>
<span id="cb2-11">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">saidi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>,</span>
<span id="cb2-12">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">saifi =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span></span>
<span id="cb2-13">    )</span>
<span id="cb2-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb2-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(state, saidi)</span>
<span id="cb2-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> saidi,</span>
<span id="cb2-19">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> saifi)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> state <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"US median*"</span>),</span>
<span id="cb2-21">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb2-22">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> state <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"US median*"</span>,</span>
<span id="cb2-24">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> state)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(base_red,</span>
<span id="cb2-26">                                median_red)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_limits</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-28">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"States' SAIDIs &amp; SAIFIs compared to the"</span>, median_tag), </span>
<span id="cb2-30">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*including major events"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey90"</span>),</span>
<span id="cb2-33">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb2-34">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_markdown</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)))</span></code></pre></div>
</details>
</div>
<p><img src="https://jdnricardo.com/posts/eaglei/viz_sketches/images/scatter-1.png" class="img-fluid" alt="Scatterplot comparing my estimates of SAIDI and SAIFI for each of 8 states, alongside EIA median values."></p>
</section>
<section id="total-annual-outages" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="total-annual-outages">Total annual outages</h2>
<p>I will start off comparing my SAIDI with the EIA’s median value of “just over seven hours”, translated by yours truly to 7.35 (or 5% higher). Louisiana catches the eye, being so far out at 50+ hours. But that’s not as far adrift as it is in the EIA data, at 80+ hours. Maine has the lowest SAIDI in my analysis and the EIA’s (you go Maine!). Most states in my analysis are above the EIA median, as I expected. But on closer inspection, it’s by smaller margins than I want to see before closing out this analysis. Kentucky is above-median according to the EIA and below-median if you look at my analysis.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">state_saidi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(</span>
<span id="cb3-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb3-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state =</span> median_tag,</span>
<span id="cb3-5">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Technically, they say "just over seven hours"</span></span>
<span id="cb3-6">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># so I added 5%</span></span>
<span id="cb3-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">saidi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span></span>
<span id="cb3-8">    )</span>
<span id="cb3-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb3-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(state, saidi)</span>
<span id="cb3-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> saidi,</span>
<span id="cb3-14">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> state)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> state <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> median_tag)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(base_red,</span>
<span id="cb3-17">                               median_red)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*including major events"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey90"</span>),</span>
<span id="cb3-21">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_markdown</span>(),</span>
<span id="cb3-22">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
</details>
</div>
<p><img src="https://jdnricardo.com/posts/eaglei/viz_sketches/images/state_saidi-1.png" class="img-fluid" alt="Bar chart showing state SAIDI values as calculated from Eagle-I data, compared to the EIA median value."></p>
<p>I will need to take another look at my approach to calculating SAIDI, and have a sneaking suspicion I need to handle missing chunks of the time-series better.</p>
<p>I should also check how the distribution of SAIDIs in individual counties held up, to better understand how I’m calculating right-tail outcomes especially. Right on time, a wild violin chart appears! The lines in each violin indicate the median SAIDI among a state’s counties, as well as the 5th / 95th SAIDI percentiles.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>Shoutout to the <code>ggtext</code> package for making it easy to experiment with color-tagging my title!</p>
</div></div><div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">county_saidi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb4-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">state =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_reorder</span>(state, saidi)</span>
<span id="cb4-4">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> saidi,</span>
<span id="cb4-6">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> state)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_violin</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">draw_quantiles =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>),</span>
<span id="cb4-8">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> base_red) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>,</span>
<span id="cb4-10">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> median_red,</span>
<span id="cb4-11">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_sqrt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"States' county SAIDIs compared to the"</span>, median_tag), </span>
<span id="cb4-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*including major events"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_line</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey90"</span>),</span>
<span id="cb4-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb4-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_markdown</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rel</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)))</span></code></pre></div>
</details>
</div>
<p><img src="https://jdnricardo.com/posts/eaglei/viz_sketches/images/county_saidi-1.png" class="img-fluid" alt="Bar chart showing county SAIDI values as calculated from Eagle-I data, compared to the EIA median value."> This helps my self-esteem a little bit. Maybe I have moderately, but not egregiously, underestimated the largest and/or longest outages? Still, look out for revisions to the SAIDI calculations in a future post!</p>
</section>
<section id="number-of-outages" class="level2">
<h2 class="anchored" data-anchor-id="number-of-outages">Number of outages</h2>
<p>Showing the same charts, but now with SAIFI rather than SAIDI. Other than Louisiana coming in <strong>above</strong> the EIA estimate, I can summarize everything else as worse than my SAIDI analysis in replicating the EIA estimates. The SAIFI values I came up with are lower than the EIA’s state-level estimates. Most notable are the many state SAIFI estimates that come in lower than the EIA median… a clearer sign that more work is needed here.</p>
<p><img src="https://jdnricardo.com/posts/eaglei/viz_sketches/images/state_saifi-1.png" class="img-fluid" alt="Bar chart showing state SAIFI values as calculated from Eagle-I data, compared to the EIA median value."></p>
<p><img src="https://jdnricardo.com/posts/eaglei/viz_sketches/images/county_saifi-1.png" class="img-fluid" alt="Bar chart showing county SAIFI values as calculated from Eagle-I data, compared to the EIA median value."></p>
</section>
<section id="next-steps" class="level2">
<h2 class="anchored" data-anchor-id="next-steps">Next steps</h2>
<p>Setting aside whether or how much I can mitigate uncertainty due to using census population figures (and not utility customer figures), I feel confident there is room to tighten up my SAIDI and SAIFI calculations with a closer review of them. Along the way, I plan to develop additional charts to quantify the discrepancies I find.</p>
<p>Ideally, I would also show the above charts alongside the <em>actual</em> EIA values for each state / county, and not just the overall median value as derived from visually interpreting their published chart. It’s not exactly a sturdy foundation for comparative analysis…</p>
<p>Firming this up will require reading in &amp; manipulating data the EIA publishes on utility reliability (in spreadsheets named “Reliability.xlsx” for each calendar year). From a quick glance, the reliability files allow for taking a weighted average SAIDI / SAIFI for each state, using the “Number of Customers” column as the weight. Stay tuned for this update as well!</p>
<p>To cap things off, I would like to conjure up interactive visualizations of my Eagle-I analysis (and comparisons to the EIA figures), maybe with the <code>ggiraph</code> package.</p>
<!-- ## Visual narrative for EIA comp-->
<!-- To start with, what does my version of the EIA scatterplot look like. Show this and my tabulated set of EIA values in faceted scatterplots -->
<!-- Next, a dumbbell plot where one axis contains states, and the other compares points indicating my SAIDI / SAIFI and the EIA ones. -->
<!-- Finally, a lolli / bar plot where the values are discrepancies between my metrics and the EIA's, using the latter as ground truth. -->


</section>

 ]]></description>
  <category>code</category>
  <category>energy</category>
  <category>eaglei</category>
  <guid>https://jdnricardo.com/posts/eaglei/viz_sketches/</guid>
  <pubDate>Wed, 23 Oct 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Aligning with EIA’s metrics</title>
  <dc:creator>Julian Ricardo</dc:creator>
  <link>https://jdnricardo.com/posts/eaglei/eia_metrics/</link>
  <description><![CDATA[ 





<section id="assembling-the-tools" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="assembling-the-tools">Assembling the tools</h2>
<p>This post is the second in a series exploring the DOE’s <a href="https://openenergyhub.ornl.gov/explore/dataset/eaglei_outages_2014/information/" target="_blank">Eagle-I dataset</a> on energy grid outages. See previous posts here: <a href="../intro/index.html" target="_blank">first</a></p>
<p>First, I want to pause and discuss differences in the data available from Eagle-I and the Energy Information Administration (EIA), the latter appearing in this <a href="https://www.eia.gov/todayinenergy/detail.php?id=54639" target="_blank">article</a>.</p>
<p>The main EIA metrics of interest include multiple “duration” indices, and one “frequency” index:</p>
<ul>
<li>System Average Interruption Duration Index (SAIDI),</li>
<li>System Average Interruption Frequency Index (SAIFI), and</li>
<li>Customer Average Interruption Duration Index (CAIDI).</li>
</ul>
<p>In the article’s second figure (copied below), SAIDI and SAIFI show up on the horizontal and vertical axes, respectively.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>For a quick-hit understanding, check the <a href="https://youtu.be/oVH9L0fCMTU" target="_blank">EIA’s video guide</a></p>
</div></div><p><img src="https://jdnricardo.com/posts/eaglei/intro/chart2.svg" class="img-fluid" alt="Average total annual electric power interruption duration and frequency per customer, by state, for 2021 only"></p>
<p>All this background to say that SAIDI divides the number of customers affected by an outage by the number of customers in the system. <strong>We do not have the latter available to us in Eagle-I</strong>, so for the sake of this exercise, I will pull in county-level population data from the <code>tidycensus</code> <a href="https://walker-data.com/tidycensus/" target="_blank">package</a>, and see how closely we can replicate the EIA’s published values.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>As always, there are important assumptions embedded in our assumptions. Here, we’re assuming everyone in every county in the US is connected to the grid, or “in the system”, to use the EIA’s language. Not sure I like the sound of “in the system”, but alas, we’re stuck with the term.</p>
</div></div></section>
<section id="calculating-saidi" class="level2">
<h2 class="anchored" data-anchor-id="calculating-saidi">Calculating SAIDI</h2>
<p>Here’s an example of a function (<code>calc_saidi</code>) that takes our 15min-interval Eagle-I data and calculates a SAIDI metric. Along the way, it creates a variable for the numerator in the SAIDI formula (total number of customer hours without power), joins the necessary census data for the denominator, then converts time intervals into the proper units for SAIDI in the concluding <code>mutate</code> call. Giving the function a meaningful name will make it easier to understand what the targets pipeline is doing.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">calc_saidi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(eaglei_df,</span>
<span id="cb1-2">                       census_df,</span>
<span id="cb1-3">                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Time intervals are 15min per documentation, or 0.25h</span></span>
<span id="cb1-4">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data_interval =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hours"</span>),</span>
<span id="cb1-5">                       summ_by) {</span>
<span id="cb1-6">  </span>
<span id="cb1-7">  eaglei_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb1-9">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Within each outage interval, how many customers were affected</span></span>
<span id="cb1-10">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tot_cust_hrs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(customers_out),</span>
<span id="cb1-11">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># whether grouped by state, state+county, etc.</span></span>
<span id="cb1-12">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_of</span>(summ_by)</span>
<span id="cb1-13">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join the relevant population data (may need to add year to possible vars)</span></span>
<span id="cb1-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">join_eaglei_census</span>(census_df,</span>
<span id="cb1-16">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">join_spec =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(summ_by,</span>
<span id="cb1-17">                                             <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"state"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"county"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn number of intervals into units of time (hours by default)</span></span>
<span id="cb1-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb1-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(tot_cust_hrs), \(x) { x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> data_interval}),</span>
<span id="cb1-21">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Then calculate SAIDI</span></span>
<span id="cb1-22">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">saidi =</span> tot_cust_hrs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> pop</span>
<span id="cb1-23">    )</span>
<span id="cb1-24">}</span></code></pre></div>
</div>
<p>In <code>_targets.R</code>, we call <code>calc_saidi</code> in whichever targets require it, using the feature-enhanced Eagle-I dataset in the preceding target, named <code>add_features</code>, and specifying different variables to summarize by. See the screengrab below for example function output from the <code>county_saidi</code> target.</p>
<p><img src="https://jdnricardo.com/posts/eaglei/eia_metrics/sample_saidi_county.png" class="img-fluid" alt="Console output in R showing the calculated SAIDI metric for counties in Louisiana"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb2-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Targets before...,</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_target</span>(</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> add_features,</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">command =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_outage_id</span>(states_eaglei)</span>
<span id="cb2-6">  ),</span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_target</span>(</span>
<span id="cb2-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> county_saidi,</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">command =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_saidi</span>(add_features,</span>
<span id="cb2-10">                         states_census,</span>
<span id="cb2-11">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">summ_by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"state"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"county"</span>))</span>
<span id="cb2-12">  ),</span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_target</span>(</span>
<span id="cb2-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> state_saidi,</span>
<span id="cb2-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">command =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_saidi</span>(add_features,</span>
<span id="cb2-16">                         states_census,</span>
<span id="cb2-17">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">summ_by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"state"</span>))</span>
<span id="cb2-18">  )</span>
<span id="cb2-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Targets after...</span></span>
<span id="cb2-20">)</span></code></pre></div>
</div>
<p>The state SAIDI target produces similar results, but fewer rows (one per state). They don’t exactly line up with the EIA chart, but states’ relative performances are close enough to justify further investigation (read: next post).</p>
<p><img src="https://jdnricardo.com/posts/eaglei/eia_metrics/sample_saidi_state.png" class="img-fluid" alt="Console output in R showing the calculated SAIDI metric for an assortment of US states">.</p>
</section>
<section id="saifi-caidi" class="level2">
<h2 class="anchored" data-anchor-id="saifi-caidi">SAIFI &amp; CAIDI</h2>
<p>I discussed metrics which I have not yet quantified. To recap, SAIFI is the number of interruptions the average customer experienced, and CAIDI (Customer Average Interruption Duration Index), the average length of each interruption.</p>
<p>At first I hoped to tackle multiple metrics with one function, but for now I’m opting to keep them separate. Calculating SAIFI (or CAIDI) may not end up looking too different from the SAIDI function, but I am leaving that (and potential consolidation of the functions) to future posts. Gotta stretch out the material ;)</p>
<p>I will continue to document my work here, but superfans (lol) or future contributors can follow commits to the underlying <a href="https://github.com/jdnricardo/eaglei_outages">repo</a> as well!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>energy</category>
  <category>eaglei</category>
  <guid>https://jdnricardo.com/posts/eaglei/eia_metrics/</guid>
  <pubDate>Thu, 10 Oct 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating a personal avatar</title>
  <dc:creator>Julian Ricardo</dc:creator>
  <link>https://jdnricardo.com/posts/making-an-avatar/</link>
  <description><![CDATA[ 





<p><img src="https://jdnricardo.com/posts/making-an-avatar/boringavatars.png" class="preview-image img-fluid"></p>
<p>A really quick post to shoutout the open-source libraries I used to create what I find to be gorgeous icons, e.g.&nbsp;the favicon I use for my website, reproduced above in a larger size.</p>
<ul>
<li><a href="https://boringavatars.com/" target="_blank">boringavatars</a></li>
<li><a href="https://coolors.co/palette/fb6107-f3de2c-7cb518-5c8001-fbb02d" target="_blank">coolors</a></li>
</ul>
<p>Anybody who worked with me previously will now know my secret to creating cute, company-themed user icons 😋</p>
<pre><code>import Avatar from 'boring-avatars';

&lt;Avatar 
        name='Julian do Nascimento Ricardo'
        size='180'
        variant='sunset'
        colors={['#FB6107', '#F3DE2C', '#7CB518', '#5C8001', '#FBB02D']}
/&gt;</code></pre>



 ]]></description>
  <category>code</category>
  <category>javascript</category>
  <category>open-source</category>
  <category>viz</category>
  <guid>https://jdnricardo.com/posts/making-an-avatar/</guid>
  <pubDate>Mon, 02 Sep 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Working with power outage data</title>
  <dc:creator>Julian Ricardo</dc:creator>
  <link>https://jdnricardo.com/posts/eaglei/intro/</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://jdnricardo.com/posts/eaglei/intro/Landing_eagle.png" class="preview-image img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<section id="pilot-episode-updated-829" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="pilot-episode-updated-829">Pilot episode (updated 8/29)</h2>
<p>This post is the first in a series where I will explore the DOE’s <a href="https://openenergyhub.ornl.gov/explore/dataset/eaglei_outages_2014/information/" target="_blank">Eagle-I dataset</a> on energy grid outages.</p>
<p>It’s a quick one, focusing on mise en place. I’ll share some snippets of code for setting up a pipeline with the <code>targets</code> package to save compute time further downstream in the analysis, given the size of the data (available via <a href="https://figshare.com/s/417a4f147cf1357a5391?file=42547708" target="_blank">figshare</a> below). On my local machine, I will <em>definitely</em> save meaningful time by not loading the same csv multiple times. And especially during more exploratory phases of analysis, I enjoy fewer breaks for computation because I’ll stay in a flow-ier state.</p>
<p><img src="https://jdnricardo.com/posts/eaglei/intro/large_data.jpg" class="img-fluid"></p>

<div class="no-row-height column-margin column-container"><div class="">
<p>For setup preceding the steps I’ll show, I recommend the <code>targets</code> <a href="https://books.ropensci.org/targets/walkthrough.html" target="_blank">walkthrough</a> which runs through a minimally viable project.</p>
</div></div><p>Before showing snippets for tasks within the Eagle-I workflow, here’s the <code>_targets.R</code> script that connects the tasks together. On good days, and ideally always, I’ll sketch out this script before coming up with code for the component tasks. In short, I want to load <strong>one year</strong> of Eagle-I data, then create <strong>monthly summaries of outage time &amp; affected customers in every state and county</strong>. I’ve chosen 2021 for reasons we’ll get into on a future post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_target</span>(</span>
<span id="cb1-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> load_one_year,</span>
<span id="cb1-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">command =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load_eaglei_year</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span>)</span>
<span id="cb1-5">  ),</span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_target</span>(</span>
<span id="cb1-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> state_month_hour,</span>
<span id="cb1-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">command =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_mo_hr</span>(load_one_year,</span>
<span id="cb1-9">                              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"state"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hr"</span>))</span>
<span id="cb1-10">  ),</span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_target</span>(</span>
<span id="cb1-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> county_month_hour,</span>
<span id="cb1-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">command =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_mo_hr</span>(load_one_year,</span>
<span id="cb1-14">                              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"county"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"state"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hr"</span>))</span>
<span id="cb1-15">  )<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#,</span></span>
<span id="cb1-16">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## IGNORE below for now</span></span>
<span id="cb1-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tar_target(</span></span>
<span id="cb1-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   name = ny_ecdf,</span></span>
<span id="cb1-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   command = state_county_ecdf(county_month_hour,</span></span>
<span id="cb1-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                               c("New York"),</span></span>
<span id="cb1-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                               c("Kings", "Erie"))</span></span>
<span id="cb1-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ),</span></span>
<span id="cb1-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tar_target(</span></span>
<span id="cb1-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   name = eia_ecdf,</span></span>
<span id="cb1-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   command = state_ecdf(state_month_hour,</span></span>
<span id="cb1-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                        c("Maine",</span></span>
<span id="cb1-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Texas",</span></span>
<span id="cb1-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "West Virginia",</span></span>
<span id="cb1-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Mississippi",</span></span>
<span id="cb1-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Louisiana",</span></span>
<span id="cb1-31">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Michigan",</span></span>
<span id="cb1-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Kentucky",</span></span>
<span id="cb1-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Oregon",</span></span>
<span id="cb1-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          # Least</span></span>
<span id="cb1-35">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "District of Columbia",</span></span>
<span id="cb1-36">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Delaware",</span></span>
<span id="cb1-37">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Florida",</span></span>
<span id="cb1-38">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "North Dakota",</span></span>
<span id="cb1-39">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                          "Nevada"))</span></span>
<span id="cb1-40">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb1-41">)</span></code></pre></div>
</div>
<p>For the first few targets, I’ll be using the <code>here</code> and <code>tidytable</code> packages to get my work done. The <code>load_eaglei_year</code> function will do little more than load the right subset of outage data, and the <code>summarise_mo_hr</code> function will do the heavy lifting for the two other targets we’ll look at in the next installment.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>Shoutout to Mark Fairbanks and the <code>tidytable</code> <a href="https://markfairbanks.github.io/tidytable" target="_blank">package</a>!</p>
</div></div><iframe src="https://widgets.figshare.com/articles/24237376/embed?show_title=1" width="568" height="351" allowfullscreen="" frameborder="0">
</iframe>
</section>
<section id="next-steps" class="level2">
<h2 class="anchored" data-anchor-id="next-steps">Next steps</h2>
<p>In future posts, I’ll cover individual targets in use here, then compare Eagle-I data with what the Energy Information Administration (EIA) visualized in this <a href="https://www.eia.gov/todayinenergy/detail.php?id=54639" target="_blank">article</a>. For now I’ve copied the charts here for reference. The first shows how long the average customer deal with power interruptions from 2013 through 2021, split by whether a “major event” triggered the interruption.</p>
<p><img src="https://jdnricardo.com/posts/eaglei/intro/main.svg" class="img-fluid" alt="Average duration of total annual eletric power interruptions"></p>
<p>The second disaggregates the data further into points for each state, plotted by total interruption time (horizontal axis) and number of discrete interruptions (vertical).</p>
<p><img src="https://jdnricardo.com/posts/eaglei/intro/chart2.svg" class="img-fluid" alt="Average total annual electric power interruption duration and frequency per customer, by state, for 2021 only"></p>
</section>
<section id="there-be-dragons" class="level2">
<h2 class="anchored" data-anchor-id="there-be-dragons">There be dragons…</h2>
<p>With yet more installments, I’m debating whether to create a <code>golem</code>-based Shiny application or build a package for easier access to EAGLE-I data within the R universe.</p>
<section id="stick-around-to-find-out" class="level4">
<h4 class="anchored" data-anchor-id="stick-around-to-find-out">Stick around to find out 😸</h4>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>energy</category>
  <category>eaglei</category>
  <guid>https://jdnricardo.com/posts/eaglei/intro/</guid>
  <pubDate>Wed, 21 Aug 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Hosting internal R packages on r-universe</title>
  <dc:creator>Julian Ricardo</dc:creator>
  <link>https://jdnricardo.com/posts/internal-pkg-r-universe/</link>
  <description><![CDATA[ 





<p><img src="https://upload.wikimedia.org/wikipedia/commons/2/27/Southern_Blue_Flag_Iris_%28iris_virginica%29_-_Flickr_-_Andrea_Westmoreland.jpg" class="preview-image img-fluid"></p>
<p>This post attempts to replicate stock analysis with the <code>coreStatsNMR</code> package, available via the <a href="nmrgroup.r-universe.dev/builds">NMR Group r-universe</a>. Specifically, using the <code>statsTable</code> function outlined in this <a href="https://nmrgroup.r-universe.dev/articles/coreStatsNMR/statsTable.html">post</a>.</p>
<p>First, downloading the library using the custom <code>repos</code> argument to point to the r-universe: <code>install.packages("coreStatsNMR", repos = c("https://nmrgroup.r-universe.dev", "https://cloud.r-project.org"))</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(coreStatsNMR)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'coreStatsNMR'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following object is masked from 'package:base':

    mode</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'dplyr'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:stats':

    filter, lag</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">statsTable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> iris,</span>
<span id="cb8-2">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">summVar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal.Length"</span>,</span>
<span id="cb8-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">groupVar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species"</span>,</span>
<span id="cb8-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stats =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"n"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"min"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weighted.mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"median"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iqr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cv"</span>),</span>
<span id="cb8-5">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">accuracy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb8-6">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop0trailing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-7">  knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in statsTable.data.frame(data = iris, summVar = "Sepal.Length", : Using placeholder weights of 1 for all data</code></pre>
</div>
<div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">stat</th>
<th style="text-align: left;">setosa</th>
<th style="text-align: left;">versicolor</th>
<th style="text-align: left;">virginica</th>
<th style="text-align: left;">Total</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">n</td>
<td style="text-align: left;">50</td>
<td style="text-align: left;">50</td>
<td style="text-align: left;">50</td>
<td style="text-align: left;">150</td>
</tr>
<tr class="even">
<td style="text-align: left;">min</td>
<td style="text-align: left;">4.30</td>
<td style="text-align: left;">4.90</td>
<td style="text-align: left;">4.90</td>
<td style="text-align: left;">4.30</td>
</tr>
<tr class="odd">
<td style="text-align: left;">max</td>
<td style="text-align: left;">5.80</td>
<td style="text-align: left;">7.00</td>
<td style="text-align: left;">7.90</td>
<td style="text-align: left;">7.90</td>
</tr>
<tr class="even">
<td style="text-align: left;">mean</td>
<td style="text-align: left;">5.01</td>
<td style="text-align: left;">5.94</td>
<td style="text-align: left;">6.59</td>
<td style="text-align: left;">5.84</td>
</tr>
<tr class="odd">
<td style="text-align: left;">weighted.mean</td>
<td style="text-align: left;">5.01</td>
<td style="text-align: left;">5.94</td>
<td style="text-align: left;">6.59</td>
<td style="text-align: left;">5.84</td>
</tr>
<tr class="even">
<td style="text-align: left;">median</td>
<td style="text-align: left;">5.00</td>
<td style="text-align: left;">5.90</td>
<td style="text-align: left;">6.50</td>
<td style="text-align: left;">5.80</td>
</tr>
<tr class="odd">
<td style="text-align: left;">sd</td>
<td style="text-align: left;">0.35</td>
<td style="text-align: left;">0.52</td>
<td style="text-align: left;">0.64</td>
<td style="text-align: left;">0.83</td>
</tr>
<tr class="even">
<td style="text-align: left;">iqr</td>
<td style="text-align: left;">0.40</td>
<td style="text-align: left;">0.70</td>
<td style="text-align: left;">0.67</td>
<td style="text-align: left;">1.30</td>
</tr>
<tr class="odd">
<td style="text-align: left;">cv</td>
<td style="text-align: left;">0.07</td>
<td style="text-align: left;">0.09</td>
<td style="text-align: left;">0.10</td>
<td style="text-align: left;">0.14</td>
</tr>
</tbody>
</table>
</div>
</div>
<section id="so-what" class="level3">
<h3 class="anchored" data-anchor-id="so-what">So what?</h3>
<p>Yay! We can run summary statistics on stock R data with our own package. Why do this? We already can write expressive pipelines with various packages: <code>dplyr</code>, <code>data.table</code>, <code>collapse</code>, or <code>polars</code>. The added value of a DIY function is not apparent, especially if it’s using those packages underneath.</p>
<p>However, for a consulting firm, such as my previous employer, there is value in creating wrapped versions of the stock <code>coreStats</code> functions which incorporate project/client constraints and documentation. That way, the core functions’ focus can be on being very good in a narrow scope (for each function), but they can be combined and/or extended via wrappers for projects and/or specific, repetitive applications. This does assume time is invested in designing them to play nicely with one another, and maintaining these conditions as the codebase evolves. Having shareable “core” functions separate from “project code” allows the firm to tap into additional marketing value as well, i.e.&nbsp;more-visibly participating in open-source software (OSS) development.</p>
<p>Internal and/or public packages are also ways to embed invaluable organizational knowledge, e.g.&nbsp;in a package’s testing suite, warnings, errors, and documentation. Of course, embedding this knowledge requires caution so that only the sources/methods/etc appropriate for public use are exposed in public repos like the r-universe.</p>


</section>

 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>pkgs</category>
  <category>ropensci</category>
  <guid>https://jdnricardo.com/posts/internal-pkg-r-universe/</guid>
  <pubDate>Thu, 15 Aug 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>So you’re probably wondering how I got to this post…</title>
  <dc:creator>Julian Ricardo</dc:creator>
  <link>https://jdnricardo.com/posts/welcome/</link>
  <description><![CDATA[ 





<p><img src="https://jdnricardo.com/posts/welcome/seal_hello.jpg" class="preview-image img-fluid"></p>
<p>First of all, welcome! This is my big break into the blogosphere, so you’re getting in on the ground floor. How exciting!</p>
<p>This is my place to get thoughts on the page, primarily in the realms of energy systems and data science. It’s also a place to showcase the skills I’ve sharpened as a professional, and mess around with tools I’d like to add to my toolset.</p>
<p>This is also a place to start paying forward the knowledge sharing I benefited from at <a href="https://nmrgroupinc.com">NMR Group</a>, where I cut my teeth as an analyst, data scientist, and eventually as a mentor to folks starting their professional journeys in R and/or in data science.</p>
<p><a href="https://www.linkedin.com/feed/update/urn:li:activity:7227386045900726272/" target="_blank"><img src="https://jdnricardo.com/posts/welcome/goodbye_nmr.png" class="img-fluid"></a></p>



 ]]></description>
  <category>news</category>
  <guid>https://jdnricardo.com/posts/welcome/</guid>
  <pubDate>Thu, 15 Aug 2024 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
